<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>En on Blog: Romain Berthon</title>
    <link>https://romaintrm.github.io/tags/en/</link>
    <description>Recent content in En on Blog: Romain Berthon</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Dec 2024 09:13:43 +0100</lastBuildDate>
    <atom:link href="https://romaintrm.github.io/tags/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ZERO DOWNTIME DATABASE MIGRATION</title>
      <link>https://romaintrm.github.io/posts/2024-12-04/</link>
      <pubDate>Wed, 04 Dec 2024 09:13:43 +0100</pubDate>
      <guid>https://romaintrm.github.io/posts/2024-12-04/</guid>
      <description>Nowadays, most of the services we&amp;rsquo;re using are online and available 24/7. If, like me, you&amp;rsquo;re working on a company that provide this kind of service, you&amp;rsquo;re probably aiming for such availability. As I&amp;rsquo;ve already highlighted it, it has a huge influence on how you should code and deploy your software. Indeed, to maximize availability, you&amp;rsquo;re probably aiming for a zero downtime deployment.&#xA;Zero downtime deployment includes several topics. Today I want to focus on how to achieve a database migration without service interruption.</description>
    </item>
    <item>
      <title>STATE-BASED AND EVENT-BASED APPROACHES</title>
      <link>https://romaintrm.github.io/posts/2024-11-20/</link>
      <pubDate>Wed, 20 Nov 2024 13:02:48 +0100</pubDate>
      <guid>https://romaintrm.github.io/posts/2024-11-20/</guid>
      <description>I&amp;rsquo;ve recently gave a talk with my friend Aur√©lien about the heuristics we&amp;rsquo;ve developed after using CQRS/ES for several years.&#xA;After our talk, we had a chat with some developers. We concluded that choosing a state-based oriented approach (like CRUD) seems to be the default solution, such choice seems to remain unchallenged. On the opposite side, choosing an event-based systems (event sourced or event driven) will very often be heavily challenged.</description>
    </item>
    <item>
      <title>AN ENJOYABLE MISSION: RETURN OF EXPERIENCE</title>
      <link>https://romaintrm.github.io/posts/2022-09-01/</link>
      <pubDate>Thu, 01 Sep 2022 20:53:08 +0200</pubDate>
      <guid>https://romaintrm.github.io/posts/2022-09-01/</guid>
      <description>I had the chance to work few months in Agicap, an enterprise producing a cashflow management SAAS for businesses.&#xA;It was a great mission, my team worked a way that I consider to be, so far, the most efficient and pleasant in my career. We managed to produce value at a constant speed while keeping a full control of our code, not allowing any kind of quality depreciation over time.</description>
    </item>
  </channel>
</rss>
